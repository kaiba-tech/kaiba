name: test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: "1.3.1"
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry install

    - name: Update pip to latest version
      run: |
        poetry run python -m pip install -U pip

    - name: Run code quality checks
      run: |
        poetry check
        poetry run pip check
        poetry run flake8 .
        poetry run mypy .
        poetry run safety check --full-report 
    - name: Run pytest
      run: |
        poetry run pytest .
    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.8
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
