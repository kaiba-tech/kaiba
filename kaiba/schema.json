{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "testid",
    "title": "Mapmallow configuration schema",
    "$ref": "#/definitions/mapping_object",
    "definitions": {
        "iterable": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "type": ["string", "integer"]
                    }
                }
            },
            "required": ["alias", "path"]
        },
        "regexp": {
            "description": "Let's you find value by REGEXP pattern",
            "type": "object",
            "properties": {
                "search": {
                    "type": "string",
                    "format": "regex"
                },
                "group": {
                    "type": ["integer", "array"],
                    "default": 0
                }
            },
            "required": ["search"]
        },
        "slicing": {
            "description": "Let's you slice found value from inclusive index[from] to exclusive index[to] leave 'to' as null to get to end of string",
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "to": {
                    "type": ["integer", "null"],
                    "default": null
                }
            },
            "required": ["from"]
        },
        "casting": {
            "type": "object",
            "properties": {
                "to": {
                    "enum": ["string", "integer", "decimal", "date"]
                },
                "original_format": {
                    "type": "string"
                }
            },
            "if": {
                "properties": {
                    "to": {
                        "const": "date"
                    }
                },
                "required": ["to"]
            },
            "then": {
                "properties": {
                    "original_format": {
                        "type": "string",
                        "pattern": "(^(yy|yyyy)[^a-z]?mm[^a-z]?dd$)|(^dd[^a-z]?mm[^a-z]?(yy|yyyy)$)|(^mm[^a-z]?dd[^a-z]?(yy|yyyy)$)"
                    }
                },
                "required": ["to", "original_format"]
            },
            "else": {
                "required": ["to"]
            }
        },
        "mapping": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "array",
                    "items": {
                        "type": ["string", "integer"]
                    }
                },
                "slicing": {
                    "$ref": "#definitions/slicing",
                    "default": {}
                },
                "regexp": {
                    "$ref": "#definitions/regexp",
                    "default": {}
                },
                "if_statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#definitions/if_statement"
                    },
                    "default": []
                },
                "default": {
                    "type": ["string","boolean", "number", "integer", "null"],
                    "default": null
                }
            },
            "if": {
                "not": {
                    "required": ["default"]
                }
            },
            "then": {
                "required": ["path"]
            }
        },
        "attribute": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#definitions/mapping"
                    }
                },
                "separator": {
                    "type": "string",
                    "default": ""
                },
                "if_statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#definitions/if_statement"
                    },
                    "default": []
                },
                "casting": {
                    "$ref": "#definitions/casting",
                    "default": {}
                },
                "default": {
                    "type": ["string", "integer", "number", "boolean", "null"],
                    "default": null
                }
            },
            "required": ["name"],
            "if": {
                "not": {
                    "required": ["default"]
                }
            },
            "then": {
                "required": ["mappings"]
            }
        },
        "if_statement": {
            "description": "Allows for `is`, `not`, `in` and `contains` evaluation and ability to set a value depending on the outcome",
            "type": "object",
            "properties": {
                "condition": {
                    "enum": ["is", "not", "in", "contains"]
                },
                "target": {
                    "type": ["object", "array", "string", "boolean", "number", "integer"]
                },
                "then": {
                    "type": ["object", "array", "string", "boolean", "number", "integer", "null"]
                },
                "otherwise": {
                    "type": ["object", "array", "string", "boolean", "number", "integer", "null"]
                }
            },
            "required": ["condition", "target", "then"],
            "if": {
                "properties": {
                    "condition": {
                        "const": "in"
                    }
                }
            },
            "then": {
                "properties": {
                    "target": {
                        "type": ["string", "array"]
                    }
                }
            }
        },
        "branching_object": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "array": {
                    "type": "boolean"
                },
                "iterables": {
                    "type": "array",
                    "items": {
                        "$ref": "#definitions/iterable"
                    },
                    "default": []
                },
                "branching_attributes": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/attribute"
                        }
                    },
                    "default": []
                }
            },
            "required": ["name", "array"]
        },
        "mapping_object": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "array": {
                    "type": "boolean"
                },
                "iterables": {
                    "type": "array",
                    "items": {
                        "$ref": "#definitions/iterable"
                    },
                    "default": []
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mapping_object"
                    },
                    "default": []
                },
                "branching_objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/branching_object"
                    },
                    "default": []
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/attribute"
                    },
                    "default": []
                }
            },
            "required": ["name", "array"]
        }
    }
}
